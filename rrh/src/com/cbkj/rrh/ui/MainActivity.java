package com.cbkj.rrh.ui;import android.app.TabActivity;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.text.TextUtils;import android.view.KeyEvent;import android.view.View;import android.widget.TabHost;import android.widget.Toast;import com.alibaba.fastjson.JSON;import com.cbkj.rrh.R;import com.cbkj.rrh.bean.ApkBean;import com.cbkj.rrh.db.PreferenceUtil;import com.cbkj.rrh.net.http.HttpRequest;import com.cbkj.rrh.net.http.HttpRequestAsyncTask.TaskListenerWithState;import com.cbkj.rrh.net.http.HttpResponse;import com.cbkj.rrh.net.http.HttpResponse.HttpTaskState;import com.cbkj.rrh.net.http.HttpURL;import com.cbkj.rrh.net.request.UserRequest;import com.cbkj.rrh.push.MessageReceiver;import com.cbkj.rrh.system.BGApp;import com.cbkj.rrh.ui.home.TaskShowActivity;import com.cbkj.rrh.ui.me.MeActivity;import com.cbkj.rrh.ui.order.OrderActivity;import com.cbkj.rrh.ui.publish.TaskSendActivity;import com.cbkj.rrh.utils.update.UpdateManager;import com.cbkj.rrh.view.BToast;import com.cbkj.rrh.view.MarkImgRadioButton;/** *  * @todo:主界面 * @date:2014-12-4 下午5:10:25 * @author:hg_liuzl@163.com */@SuppressWarnings("deprecation")public class MainActivity extends TabActivity implements TaskListenerWithState{		/**任务切换**/	public static final String TASK_CHECK_TAB = "com.bgood.task.enter.TASKLIST";		/**任务切换**/	public static final String CHECK_TAB_ID = "com.bgood.task.enter.TASKLIST";		/**是否进入我的接单*/	public static boolean mGoToReciverTask = false;	/**是否需要刷新数据*/	public static boolean mNeedRefreshData = false;		public static TabHost mTabHost;	public static final String SHOW_CURRENT_TAB = "show_current_tab";	public static final String SHOW_OF_FIRST_TAG = "task";	public static final String SHOW_OF_SECOND_TAG = "message";	public static final String SHOW_OF_THIRD_TAG = "publish";	public static final String SHOW_OF_FOUR_TAG = "me";	public String mCurrentTab = SHOW_OF_FIRST_TAG;		public static MainActivity instance = null;		public PreferenceUtil pUitl;		private MarkImgRadioButton[] mirbs;			@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.a_main_layout);		BGApp.getInstance().addActivity(this);		pUitl = new PreferenceUtil(this, PreferenceUtil.PREFERENCE_FILE);		instance = this;		initView();		registerPushBoradcastReceiver();		registerCheckTaskTab();		UserRequest.getInstance().requestCheckUpgrade(this, this);	}			@Override	protected void onResume() {		super.onResume();		String tab = (String) getIntent().getSerializableExtra(SHOW_CURRENT_TAB);		if (!TextUtils.isEmpty(tab)) {			mCurrentTab = tab;		};		selectCurrentTab();	}		@Override	protected void onDestroy() {		super.onDestroy();		unregisterReceiver(mBroadcastReceiver);		unregisterReceiver(mCheckTaskTab);	}		/**	 * 	 * @todo:TODO 设置当前选中的Tab	 * @date:2015-3-16 下午6:24:26	 * @author:hg_liuzl@163.com	 * @params:@param mTab	 */	private void selectCurrentTab() {		int mTab = -1;		if (mCurrentTab.equals(SHOW_OF_FIRST_TAG)) {			mTab = 0;		} else if (mCurrentTab.equals(SHOW_OF_SECOND_TAG)) {			mTab = 1;		} else if (mCurrentTab.equals(SHOW_OF_THIRD_TAG)) {			mTab = 2;		} else if (mCurrentTab.equals(SHOW_OF_FOUR_TAG)) {			mTab = 3;		}		mTabHost.setCurrentTabByTag(mCurrentTab);		for (int i = 0; i < mirbs.length; i++) {			if (mTab==i) {				mirbs[i].setSelected(true);			}else{				mirbs[i].setSelected(false);			}		}	}		/**	 * 	 * @todo:选择Tab	 * @date:2015-3-16 下午4:25:41	 * @author:hg_liuzl@163.com	 * @params:@param view	 */	public void onTabClicked(View view) {		switch (view.getId()) {		case R.id.main_tab_home:			mCurrentTab = SHOW_OF_FIRST_TAG;			break;		case R.id.main_tab_message:			mCurrentTab = SHOW_OF_SECOND_TAG;			break;		case R.id.main_tab_publish:			mCurrentTab = SHOW_OF_THIRD_TAG;			break;		case R.id.main_tab_me:			mCurrentTab = SHOW_OF_FOUR_TAG;			break;		default:			mCurrentTab = SHOW_OF_FIRST_TAG;			break;		}		showRemberTip();		selectCurrentTab();	}		private void initView() {		mTabHost = getTabHost();		mirbs = new MarkImgRadioButton[4];		mirbs[0] = (MarkImgRadioButton) findViewById(R.id.main_tab_home);		mirbs[1] = (MarkImgRadioButton) findViewById(R.id.main_tab_message);		mirbs[2] = (MarkImgRadioButton) findViewById(R.id.main_tab_publish);		mirbs[3] = (MarkImgRadioButton) findViewById(R.id.main_tab_me);		Intent i_task = new Intent(this, TaskShowActivity.class);		Intent i_message = new Intent(this, OrderActivity.class);		Intent i_send = new Intent(this, TaskSendActivity.class);		Intent i_me = new Intent(this, MeActivity.class);		mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_FIRST_TAG).setIndicator(SHOW_OF_FIRST_TAG).setContent(i_task));		mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_SECOND_TAG).setIndicator(SHOW_OF_SECOND_TAG).setContent(i_message));		mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_THIRD_TAG).setIndicator(SHOW_OF_THIRD_TAG).setContent(i_send));		mTabHost.addTab(mTabHost.newTabSpec(SHOW_OF_FOUR_TAG).setIndicator(SHOW_OF_FOUR_TAG).setContent(i_me));		showRemberTip();	}		private long exitTime = 0;// 监听用户按返回键        @Override    public boolean dispatchKeyEvent(KeyEvent event) {    	if(event.getAction() == KeyEvent.ACTION_DOWN && event.getKeyCode() == KeyEvent.KEYCODE_BACK){    		if ((System.currentTimeMillis() - exitTime) > 2000) {				Toast.makeText(MainActivity.this, "再按一次退出程序",Toast.LENGTH_SHORT).show();				exitTime = System.currentTimeMillis();				return true;			} else {				BGApp.finishAllActivity();				finish();			}    		return false;    	}    	return super.dispatchKeyEvent(event);    }	@Override	public void onTaskOver(HttpRequest request, HttpResponse response) {				if (response.getState() == HttpTaskState.STATE_OK) {			if (HttpURL.URL_CHECK_UPDATE == request.getRequestUrl()) {	//检查升级接口				if (null != response.result && response.result.getSuccess()) {					/**版本升级处理*/					final ApkBean apk = JSON.parseObject(response.result.getStrBody(), ApkBean.class);					UpdateManager manager = new UpdateManager(MainActivity.this, apk);					manager.checkUpdateInfo(false);				}else{					BToast.show(MainActivity.this, response.result.getErrorMsg());				}			} 		}	}			/**	 * 	 * @todo:设置提示	 * @date:2015-6-15 下午7:46:18	 * @author:hg_liuzl@163.com	 * @params:	 */	private void showRemberTip() {		if (pUitl.hasNoReadMsg(pUitl.getUserID())) {			mirbs[1].setVisible(mCurrentTab == SHOW_OF_SECOND_TAG?View.GONE:View.VISIBLE);		}else{			mirbs[1].setVisible(View.GONE);		}				if (pUitl.hasReadAll()) {	//如果已经读了			mirbs[3].setVisible(View.GONE);		} else {			mirbs[3].setVisible(mCurrentTab == SHOW_OF_FOUR_TAG?View.GONE:View.VISIBLE);		}	}		/***	 * 	 * @todo:注册推送数量广播	 * @date:2015-6-15 下午5:24:09	 * @author:hg_liuzl@163.com	 * @params:	 */    public void registerPushBoradcastReceiver(){          IntentFilter myIntentFilter = new IntentFilter();          myIntentFilter.addAction(MessageReceiver.MSG_RECEIVER_TAG);          //注册广播                registerReceiver(mBroadcastReceiver, myIntentFilter);      }        private BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver(){		@Override		public void onReceive(Context context, Intent intent) {			String action = intent.getAction();			if(action.equals(MessageReceiver.MSG_RECEIVER_TAG)){	//收到广播				showRemberTip();			}		}	};			/***	 * 	 * @todo:任务切换的	 * @date:2015-6-15 下午5:24:09	 * @author:hg_liuzl@163.com	 * @params:	 */    public void registerCheckTaskTab(){          IntentFilter myIntentFilter = new IntentFilter();          myIntentFilter.addAction(TASK_CHECK_TAB);          registerReceiver(mCheckTaskTab, myIntentFilter);      }		private BroadcastReceiver mCheckTaskTab = new BroadcastReceiver() {				@Override		public void onReceive(Context context, Intent intent) {			mCurrentTab = intent.getStringExtra(CHECK_TAB_ID);						if (SHOW_OF_SECOND_TAG.equals(mCurrentTab)) {				mGoToReciverTask = true;				selectCurrentTab();			}else if(SHOW_OF_FIRST_TAG.equals(mCurrentTab)){				mNeedRefreshData = true;				selectCurrentTab();			}		}	};	}