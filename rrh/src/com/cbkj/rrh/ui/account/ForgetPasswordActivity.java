package com.cbkj.rrh.ui.account;import org.json.JSONObject;import android.app.Dialog;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.text.Editable;import android.text.TextUtils;import android.text.TextWatcher;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.EditText;import com.cbkj.rrh.R;import com.cbkj.rrh.bean.UserBean;import com.cbkj.rrh.net.http.HttpRequest;import com.cbkj.rrh.net.http.HttpRequestAsyncTask.TaskListenerWithState;import com.cbkj.rrh.net.http.HttpResponse;import com.cbkj.rrh.net.http.HttpResponse.HttpTaskState;import com.cbkj.rrh.net.http.HttpURL;import com.cbkj.rrh.net.request.UserRequest;import com.cbkj.rrh.ui.base.BaseBackActivity;import com.cbkj.rrh.view.BToast;import com.cbkj.rrh.view.dialog.DialogFactory;import com.cbkj.rrh.widget.TitleBar;import com.umeng.analytics.MobclickAgent;/** *  * @todo:找回密码 * @date:2015-4-29 下午2:55:52 * @author:hg_liuzl@163.com */public class ForgetPasswordActivity extends BaseBackActivity implements TaskListenerWithState,OnClickListener {	    private EditText m_phoneEt,etVerifyCoide;	    private TitleBar titleBar = null;	    private String mPhone = null;	    private int time = 60;	    private Button btnGetCode;	    private String accessToken;	    private boolean hasCheck = false;		@Override		protected void onResume() {			super.onResume();			MobclickAgent.onResume(this);		}				@Override		protected void onPause() {			super.onPause();			MobclickAgent.onPause(this);		}	    	    @Override	    protected void onCreate(Bundle savedInstanceState)	    {	        super.onCreate(savedInstanceState);	        setContentView(R.layout.layout_forget_password_phone);	        titleBar = new TitleBar(mActivity);	        titleBar.initAllBar("找回密码", "下一步");	        titleBar.rightBtn.setOnClickListener(this);	        titleBar.rightBtn.setEnabled(false);	        m_phoneEt = (EditText) findViewById(R.id.et_phone_number);  	        	        m_phoneEt = (EditText) findViewById(R.id.et_phone_number);//			m_phoneEt.addTextChangedListener(new TextWatcher() {//				//				@Override//				public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {}//				//				@Override//				public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,int arg3) {}//				//				@Override//				public void afterTextChanged(Editable e) {//					mPhone = m_phoneEt.getText().toString().trim();//					if(mPhone.length()==11){//						if(ToolUtils.isTelephone(mPhone)){//							UserRequest.getInstance().requestCheckPhone(ForgetPasswordActivity.this, mActivity, mPhone);//						}else{//							BToast.show(mActivity, "手机号格式不正确，请重新输入！");//						}//					}//				}//			});	        			etVerifyCoide = (EditText) findViewById(R.id.et_verify_code);  						etVerifyCoide.addTextChangedListener(new TextWatcher() {								@Override				public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {}								@Override				public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,int arg3) {}								@Override				public void afterTextChanged(Editable e) {					String verifyCode = etVerifyCoide.getText().toString().trim();					if(verifyCode.length() == 4){							UserRequest.getInstance().requestCheckVerifyCode(ForgetPasswordActivity.this, mActivity, verifyCode,accessToken);						}					}			});				        btnGetCode =  (Button) findViewById(R.id.btn_verify_code);	        btnGetCode.setOnClickListener(this);	    }	    /**	     * 检查用户信息方法	     */	    private void checkInfo()	    {	       Intent intent = new Intent(ForgetPasswordActivity.this,ForgetPasswordNewPassWordActivity.class);	       intent.putExtra(UserBean.USER_TELEPHONE, mPhone);	       startActivity(intent);	    }		@Override		public void onClick(View v) {			switch (v.getId()) {			case R.id.btn_right:				checkInfo();				break;			case R.id.btn_verify_code:				mPhone = m_phoneEt.getText().toString().trim();								if (TextUtils.isEmpty(mPhone)) {					BToast.show(mActivity, "请输入手机号");					return;				} else if (mPhone.length() != 11) {					BToast.show(mActivity, "请输入正确的手机号");					return;				} else {					if (hasCheck) {						UserRequest.getInstance().requestPhoneVerifyCode(this, this,mPhone);					} else {						UserRequest.getInstance().requestCheckPhone(ForgetPasswordActivity.this, mActivity, mPhone);					}				}				break;//			case R.id.tv_know://				Intent intent = new Intent(mActivity,RegisterActivity.class);//				startActivity(intent);//				finish();//				break;			default:				break;			}					}						Handler timeHandler = new Handler();		Runnable bannerStartRun = new Runnable() {			@Override			public void run() {				timeHandler.postDelayed(this, 1000);				if(time < 0)				{					btnGetCode.setEnabled(true);					btnGetCode.setText(R.string.authcode_get_code);					time = 60;					timeHandler.removeCallbacks(bannerStartRun);				}else{					btnGetCode.setText(getString(R.string.authcode_wait_code, time--));				}			}		};		@Override		public void onTaskOver(HttpRequest request, HttpResponse response) {			if(response.getState() == HttpTaskState.STATE_OK){				if(request.getRequestUrl() == HttpURL.URL_CHECK_PHONE){//检验手机号码					dealCheckPhoneNumber(response);				}else if(request.getRequestUrl() == HttpURL.URL_PHONE_VERIFYCODE){//获取验证码					dealVerifyCode(response);				}else if(request.getRequestUrl() == HttpURL.URL_CHECK_VERIFYCODE){					dealCheckCode(response);				}			}		}				/**		 * 		 * @todo:处理检验手机号的结果		 * @date:2015-5-5 下午8:04:46		 * @author:hg_liuzl@163.com		 * @params:@param response		 */		Dialog dialog = null;		private void dealCheckPhoneNumber(HttpResponse response) {			if (response.result.getSuccess()) {				hasCheck = true;				JSONObject object = response.result.getJsonBody();				String state = object.optString("isUsed");					if(state.equalsIgnoreCase("false")){						dialog = DialogFactory.singleDialog(mActivity, "该手机号还没有注册！", "确定",new OnClickListener() {														@Override							public void onClick(View arg0) {								hasCheck = false;								mPhone = "";								m_phoneEt.setText("");								dialog.dismiss();							}						});					}else{						UserRequest.getInstance().requestPhoneVerifyCode(this, this,mPhone);					}			}		}				/**		 * 		 * @todo:获取验证码		 * @date:2015-5-5 下午9:05:27		 * @author:hg_liuzl@163.com		 * @params:@param response		 */		private void dealVerifyCode(HttpResponse response) {			if (response.result.getSuccess()) {				timeHandler.postDelayed(bannerStartRun, 0);				btnGetCode.setEnabled(false);				JSONObject object = response.result.getJsonBody();				accessToken = object.optString("accessToken");				//				String verifyCode = object.optString("verifyCode");//				etVerifyCoide.setText(verifyCode);			}		}				/**		 * 		 * @todo:检验验证码		 * @date:2015-5-5 下午9:15:51		 * @author:hg_liuzl@163.com		 * @params:@param response		 */		private void dealCheckCode(HttpResponse response) {			titleBar.rightBtn.setEnabled(true);		}}