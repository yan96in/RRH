package com.cbkj.rrh.main.account;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.text.TextUtils;import android.view.KeyEvent;import android.view.View;import android.view.View.OnClickListener;import android.widget.EditText;import com.alibaba.fastjson.JSON;import com.cbkj.rrh.R;import com.cbkj.rrh.bean.UserBean;import com.cbkj.rrh.db.PreferenceUtil;import com.cbkj.rrh.main.MainActivity;import com.cbkj.rrh.main.base.BaseBackActivity;import com.cbkj.rrh.net.http.HttpRequest;import com.cbkj.rrh.net.http.HttpRequestAsyncTask.TaskListenerWithState;import com.cbkj.rrh.net.http.HttpResponse;import com.cbkj.rrh.net.http.HttpResponse.HttpTaskState;import com.cbkj.rrh.net.http.HttpURL;import com.cbkj.rrh.net.request.UserRequest;import com.cbkj.rrh.others.utils.ThirdLoginAction;import com.cbkj.rrh.view.BToast;import com.cbkj.rrh.view.LoadingProgress;import com.cbkj.rrh.view.widget.TitleBar;import com.tencent.android.tpush.XGPushManager;import com.umeng.analytics.MobclickAgent;/** * @todo:登录界面 * @author:hg_liuzl@163.com */public class LoginActivity extends BaseBackActivity implements OnClickListener,		TaskListenerWithState {	/** 登录请求码 */	public static final int REQUEST_LOGIN_CODE = 100;	public static final String FROM_KEY = "from_key";	public static final String FROM_KEY_OTHER = "from_key_other";	private EditText m_accountNumberEt;	private EditText m_passwordEt;	private String mAccountNumber = "";	private String mPassWord = "";	private TitleBar titleBar = null;	@Override	protected void onResume() {		super.onResume();		MobclickAgent.onResume(this);	}	@Override	protected void onPause() {		super.onPause();		MobclickAgent.onPause(this);	}	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.layout_login_fragment);		titleBar = new TitleBar(mActivity);		titleBar.initAllBar("", "注册");		titleBar.rightBtn.setOnClickListener(this);		initView();		new ThirdLoginAction(mActivity, pUitl);	}	@Override	protected void onDestroy() {		super.onDestroy();		LoadingProgress.getInstance().dismiss();	}	private void initView() {		mAccountNumber = pUitl.getAccountNumber();		mPassWord = pUitl.getAccountPassword();		m_accountNumberEt = (EditText) findViewById(R.id.login_et_account_number);		m_accountNumberEt.setText(mAccountNumber);		m_passwordEt = (EditText) findViewById(R.id.login_et_password);		m_passwordEt.setText(mPassWord);		findViewById(R.id.tv_forget_password).setOnClickListener(this);		findViewById(R.id.login_btn_login).setOnClickListener(this);	}	@Override	public void onClick(View v) {		Intent intent = null;		switch (v.getId()) {		case R.id.btn_back:			cancelLogin();			break;		case R.id.tv_protocal:			// 查看宝宝宠物萌使用协议			intent = new Intent(mActivity, AppProtocalActivity.class);			startActivity(intent);			break;		case R.id.tv_forget_password:// 忘记密码			intent = new Intent(mActivity, ForgetPasswordActivity.class);			startActivity(intent);			break;		case R.id.login_btn_login:// 登录			mAccountNumber = m_accountNumberEt.getText().toString();			mPassWord = m_passwordEt.getText().toString();			if (TextUtils.isEmpty(mAccountNumber)) {				BToast.show(mActivity, "请输入用户名");				return;			} else if (TextUtils.isEmpty(mPassWord)) {				BToast.show(mActivity, "请输入密码");				return;			} else {				UserRequest.getInstance().requestLogin(this, mActivity,						mAccountNumber, mPassWord);			}			break;		case R.id.btn_right:			intent = new Intent(mActivity, RegisterActivity.class);			startActivity(intent);			finish();			break;		default:			break;		}	}	/**	 * 	 * @todo:登录操作	 * @date:2015-1-22 上午11:19:56	 * @author:hg_liuzl@163.com	 * @params:@param activity	 * @params:@param userid	 */	public static void doLoginAction(Activity activity) {		Intent intent = new Intent(activity, LoginActivity.class);		intent.putExtra(LoginActivity.FROM_KEY, LoginActivity.FROM_KEY_OTHER);		activity.startActivity(intent);	}	/**	 * 	 * @todo:处理未登录操作	 * @date:2015-1-22 上午11:19:56	 * @author:hg_liuzl@163.com	 * @params:@param activity	 * @params:@param userid	 */	public static void doUnLogin(Activity activity) {		Intent intent = new Intent(activity, LoginActivity.class);		activity.startActivityForResult(intent, REQUEST_LOGIN_CODE);	}	@Override	public void onTaskOver(HttpRequest request, HttpResponse response) {		if (response.getState() == HttpTaskState.STATE_OK) {			if (request.getRequestUrl() == HttpURL.URL_LOGIN) { // 登录操作				dealLogin(response);			} 		}	}	/**	 * 	 * @todo:处理登录	 * @date:2015-5-6 上午10:04:47	 * @author:hg_liuzl@163.com	 * @params:	 */	private void dealLogin(HttpResponse response) {		if (null != response.result && response.result.getSuccess()) {			pUitl.setHasLogin(true);			UserBean ub = JSON.parseObject(response.result.getStrBody(),UserBean.class);			pUitl.setUserBean(ub);						// 注册信鸽推送,绑定推送账号			XGPushManager.registerPush(mActivity.getApplicationContext(),ub.userId);						Intent intent = new Intent(mActivity,MainActivity.class);			mActivity.startActivity(intent);			mActivity.finish();		} else {			BToast.show(mActivity, response.result.getErrorMsg());		}	}	@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		if (keyCode == KeyEvent.KEYCODE_BACK) {			cancelLogin();		}		return super.onKeyDown(keyCode, event);	}	/** 取消登录 */	private void cancelLogin() {		setResult(RESULT_CANCELED);		finish();	}	/**	 * 退出登录操作	 * 	 * @param pUtil	 * @param mActivity	 */	public static void quitLogin(final PreferenceUtil pUtil,			final Activity mActivity) {		// 注册信鸽推送,绑定推送账号		XGPushManager.unregisterPush(mActivity.getApplicationContext());		pUtil.doClear();		Intent intent = new Intent(mActivity, LoginActivity.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK| Intent.FLAG_ACTIVITY_CLEAR_TOP);		mActivity.startActivity(intent);		mActivity.finish();	}}