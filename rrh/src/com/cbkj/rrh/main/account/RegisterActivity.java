package com.cbkj.rrh.main.account;import org.json.JSONObject;import android.app.Dialog;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.text.Editable;import android.text.TextUtils;import android.text.TextWatcher;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.EditText;import com.alibaba.fastjson.JSON;import com.cbkj.rrh.R;import com.cbkj.rrh.bean.UserBean;import com.cbkj.rrh.main.base.BaseBackActivity;import com.cbkj.rrh.net.http.HttpRequest;import com.cbkj.rrh.net.http.HttpRequestAsyncTask.TaskListenerWithState;import com.cbkj.rrh.net.http.HttpResponse;import com.cbkj.rrh.net.http.HttpResponse.HttpTaskState;import com.cbkj.rrh.net.http.HttpURL;import com.cbkj.rrh.net.request.UserRequest;import com.cbkj.rrh.others.utils.ThirdLoginAction;import com.cbkj.rrh.others.utils.ToolUtils;import com.cbkj.rrh.view.BToast;import com.cbkj.rrh.view.MyPopWindow;import com.cbkj.rrh.view.dialog.DialogFactory;import com.cbkj.rrh.view.widget.TitleBar;import com.tencent.android.tpush.XGPushManager;import com.umeng.analytics.MobclickAgent;/** *  * @todo:注册 * @date:2015-4-29 上午11:01:26 * @author:hg_liuzl@163.com */public class RegisterActivity extends BaseBackActivity implements TaskListenerWithState,OnClickListener{	private MyPopWindow popWork;	private EditText m_phoneEt,etPassword,etVerifyCode; // 手机号码	private String mNick = null,mPhone = null,mPwd = null;	private TitleBar mTitleBar;	private String accessToken;	private int time = 60;	private Button btnGetCode;	@Override	protected void onResume() {		super.onResume();		MobclickAgent.onResume(this);	}		@Override	protected void onPause() {		super.onPause();		MobclickAgent.onPause(this);	}		@Override	protected void onCreate(Bundle savedInstanceState)	{		super.onCreate(savedInstanceState);		setContentView(R.layout.layout_register);		findView();		new ThirdLoginAction(mActivity, pUitl);	}	/**	 * 控件初始化方法	 */	private void findView()	{		mTitleBar = new TitleBar(mActivity);		mTitleBar.initAllBar("", "下一步");		mTitleBar.rightBtn.setOnClickListener(this);		mTitleBar.rightBtn.setEnabled(false);				m_phoneEt = (EditText) findViewById(R.id.et_phone_number);		m_phoneEt.addTextChangedListener(new TextWatcher() {						@Override			public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {}						@Override			public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,int arg3) {}						@Override			public void afterTextChanged(Editable e) {				mPhone = m_phoneEt.getText().toString().trim();				if(mPhone.length() == 11){					if(ToolUtils.isTelephone(mPhone)){						UserRequest.getInstance().requestCheckPhone(RegisterActivity.this, mActivity, mPhone);					}else{						BToast.show(mActivity, "手机号格式不正确，请重新输入！");					}				}			}		});				etPassword = (EditText) findViewById(R.id.et_password);				etVerifyCode = (EditText) findViewById(R.id.et_verify_code);		etVerifyCode.addTextChangedListener(new TextWatcher() {						@Override			public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {}						@Override			public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,int arg3) {}						@Override			public void afterTextChanged(Editable e) {				String verifyCode = etVerifyCode.getText().toString().trim();				if(verifyCode.length() == 4){					UserRequest.getInstance().requestCheckVerifyCode(RegisterActivity.this, mActivity, verifyCode, accessToken);				}			}		});				btnGetCode =  (Button) findViewById(R.id.btn_verify_code);	    btnGetCode.setOnClickListener(this);	    	    popWork = new MyPopWindow(mActivity,pUitl);	    popWork.initWorkPosition();	    	}	Handler timeHandler = new Handler();	Runnable bannerStartRun = new Runnable() {		@Override		public void run() {			timeHandler.postDelayed(this, 1000);			if(time <= 0)			{				btnGetCode.setEnabled(true);				btnGetCode.setText(R.string.authcode_get_code);				time = 60;				timeHandler.removeCallbacks(bannerStartRun);			}else{				btnGetCode.setText(getString(R.string.authcode_wait_code, time--));			}		}	};		/**	 * 检查用户信息方法	 */	private void doSubmit()	{		// 用户手机号码查询				mPhone = m_phoneEt.getText().toString().trim();		mPwd = etPassword.getText().toString().trim();		if (TextUtils.isEmpty(mPhone))		{			BToast.show(mActivity, "请输入手机号码");			return;		}else if (mPhone.length()!=11){			BToast.show(mActivity, "手机号码格式不正确");			return;		}else if(TextUtils.isEmpty(mPwd)){			BToast.show(mActivity, "请设置密码");			return;		} else{			UserRequest.getInstance().requestRegister(this, this,mNick,mPhone, mPwd,popWork.mWorkPosition);		}	}	@Override	public void onClick(View v) {		Intent intent = null;		switch (v.getId()) {		case R.id.btn_right:			doSubmit();			break;		case R.id.btn_verify_code:			if (TextUtils.isEmpty(mPhone)) {				BToast.show(mActivity, "请输入手机号");				return;			}else if(mPhone.length() !=11){				BToast.show(mActivity, "请输入正确的手机号");				return;			}else{				UserRequest.getInstance().requestPhoneVerifyCode(this, this, mPhone);			}			break;		case R.id.tv_know:		    intent = new Intent(mActivity,ForgetPasswordActivity.class);			startActivity(intent);			finish();			break;		default:			break;		}	}	@Override	public void onTaskOver(HttpRequest request, HttpResponse response) {		if(response.getState() == HttpTaskState.STATE_OK){			if(request.getRequestUrl() == HttpURL.URL_CHECK_PHONE){//检验手机号码				dealCheckPhoneNumber(response);			}else if(request.getRequestUrl() == HttpURL.URL_PHONE_VERIFYCODE){//获取验证码				dealVerifyCode(response);			}else if(request.getRequestUrl() == HttpURL.URL_CHECK_VERIFYCODE){	// 检验验证码				dealCheckCode(response);			}else if(request.getRequestUrl() == HttpURL.URL_REGISTER){	//注册操作				dealRegister(response);			}		}	}		/**	 * 	 * @todo:处理检验手机号的结果	 * @date:2015-5-5 下午8:04:46	 * @author:hg_liuzl@163.com	 * @params:@param response	 */	Dialog dialog = null;	private void dealCheckPhoneNumber(HttpResponse response) {		if (response.result.getSuccess()) {			JSONObject object = response.result.getJsonBody();			String state = object.optString("isUsed");				if(state.equalsIgnoreCase("true")){					  dialog = DialogFactory.singleDialog(mActivity, "该手机号已注册!", "确定",new OnClickListener() {						@Override						public void onClick(View v) {							mPhone = "";							m_phoneEt.setText("");							dialog.dismiss();						}					});				}		}	}		/**	 * 	 * @todo:获取验证码	 * @date:2015-5-5 下午9:05:27	 * @author:hg_liuzl@163.com	 * @params:@param response	 */	private void dealVerifyCode(HttpResponse response) {		if (response.result.getSuccess()) {			timeHandler.postDelayed(bannerStartRun, 0);			btnGetCode.setEnabled(false);			JSONObject object = response.result.getJsonBody();			accessToken = object.optString("accessToken");//			String verifyCode = object.optString("verifyCode");//			etVerifyCode.setText(verifyCode);		}	}		/**	 * 	 * @todo:检验验证码	 * @date:2015-5-5 下午9:15:51	 * @author:hg_liuzl@163.com	 * @params:@param response	 */	private void dealCheckCode(HttpResponse response) {		if (response.result.getSuccess()) {			mTitleBar.rightBtn.setEnabled(true);		}else{			BToast.show(mActivity, "验证码错误");		}	}		/**	 * 	 * @todo:注册操作	 * @date:2015-5-6 下午3:51:11	 * @author:hg_liuzl@163.com	 * @params:@param response	 */	private void dealRegister(HttpResponse response) {		if (response.result.getSuccess()) {			pUitl.setAccountNumber(mPhone);			pUitl.setAccountPassword(mPwd);			pUitl.setHasLogin(true);			UserBean ub = JSON.parseObject(response.result.getStrBody(), UserBean.class);			pUitl.setUserBean(ub);			//注册信鸽推送,绑定推送账号			XGPushManager.registerPush(getApplicationContext(),ub.userId);						Intent intent = new Intent(mActivity, RegisterNextActivity.class);			mActivity.startActivity(intent);			finish();		}	}}